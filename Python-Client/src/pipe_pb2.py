# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pipe.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='pipe.proto',
  package='',
  serialized_pb=_b('\n\npipe.proto\x1a\x0c\x63ommon.proto\"\x9c\x01\n\x0e\x43ommandMessage\x12\x17\n\x06header\x18\x01 \x02(\x0b\x32\x07.Header\x12\x13\n\x04task\x18\x02 \x01(\x0b\x32\x05.Task\x12\x0e\n\x04ping\x18\x03 \x01(\x08H\x00\x12\x11\n\x07message\x18\x04 \x01(\tH\x00\x12\x17\n\x03\x65rr\x18\x05 \x01(\x0b\x32\x08.FailureH\x00\x12\x15\n\x0b\x66ileContent\x18\x06 \x01(\x0cH\x00\x42\t\n\x07payloadB\x0b\n\x07routingH\x01')
  ,
  dependencies=[common_pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_COMMANDMESSAGE = _descriptor.Descriptor(
  name='CommandMessage',
  full_name='CommandMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='CommandMessage.header', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task', full_name='CommandMessage.task', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ping', full_name='CommandMessage.ping', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='CommandMessage.message', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='err', full_name='CommandMessage.err', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fileContent', full_name='CommandMessage.fileContent', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='CommandMessage.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=29,
  serialized_end=185,
)

_COMMANDMESSAGE.fields_by_name['header'].message_type = common_pb2._HEADER
_COMMANDMESSAGE.fields_by_name['task'].message_type = common_pb2._TASK
_COMMANDMESSAGE.fields_by_name['err'].message_type = common_pb2._FAILURE
_COMMANDMESSAGE.oneofs_by_name['payload'].fields.append(
  _COMMANDMESSAGE.fields_by_name['ping'])
_COMMANDMESSAGE.fields_by_name['ping'].containing_oneof = _COMMANDMESSAGE.oneofs_by_name['payload']
_COMMANDMESSAGE.oneofs_by_name['payload'].fields.append(
  _COMMANDMESSAGE.fields_by_name['message'])
_COMMANDMESSAGE.fields_by_name['message'].containing_oneof = _COMMANDMESSAGE.oneofs_by_name['payload']
_COMMANDMESSAGE.oneofs_by_name['payload'].fields.append(
  _COMMANDMESSAGE.fields_by_name['err'])
_COMMANDMESSAGE.fields_by_name['err'].containing_oneof = _COMMANDMESSAGE.oneofs_by_name['payload']
_COMMANDMESSAGE.oneofs_by_name['payload'].fields.append(
  _COMMANDMESSAGE.fields_by_name['fileContent'])
_COMMANDMESSAGE.fields_by_name['fileContent'].containing_oneof = _COMMANDMESSAGE.oneofs_by_name['payload']
DESCRIPTOR.message_types_by_name['CommandMessage'] = _COMMANDMESSAGE

CommandMessage = _reflection.GeneratedProtocolMessageType('CommandMessage', (_message.Message,), dict(
  DESCRIPTOR = _COMMANDMESSAGE,
  __module__ = 'pipe_pb2'
  # @@protoc_insertion_point(class_scope:CommandMessage)
  ))
_sym_db.RegisterMessage(CommandMessage)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\007routingH\001'))
# @@protoc_insertion_point(module_scope)
